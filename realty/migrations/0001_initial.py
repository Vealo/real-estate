# Generated by Django 5.0.7 on 2024-08-06 13:16

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BuildingType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Наименование типа строения', max_length=150)),
                ('description', models.TextField(help_text='Описание строения')),
            ],
        ),
        migrations.CreateModel(
            name='Elevator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название лифта', max_length=150)),
                ('description', models.TextField(help_text='Описание')),
            ],
        ),
        migrations.CreateModel(
            name='EntranceSpecial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Наименование входа', max_length=150)),
                ('description', models.TextField(help_text='Описание')),
            ],
        ),
        migrations.CreateModel(
            name='EntranceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Тип входа (парадная / подъезд)', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='FloorSpecial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Тип этажа')),
                ('description', models.TextField(help_text='Описание этажа')),
            ],
        ),
        migrations.CreateModel(
            name='Ladder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название лесница', max_length=150)),
                ('description', models.TextField(help_text='Описание')),
            ],
        ),
        migrations.CreateModel(
            name='Locality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Назвение населенного пункта', max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название субъекта', max_length=100)),
                ('abbreviations', models.CharField(help_text='Абривиатура', max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name='RegionCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Код региона', max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name='RoomType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Тип комнаты', max_length=50)),
                ('discription', models.TextField(help_text='Описание комнаты')),
            ],
        ),
        migrations.CreateModel(
            name='SectionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Наименование секции', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Space',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('number', models.CharField(help_text='Номер квартиры', max_length=10)),
                ('square', models.FloatField(help_text='Площадь квартиры')),
                ('description', models.TextField(help_text='Описание квартиры')),
            ],
            options={
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='SpaceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Тип помещения', max_length=50)),
                ('discription', models.TextField(help_text='Описание помещения')),
            ],
        ),
        migrations.CreateModel(
            name='StreetType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Тип дороги (улицы) в городе', max_length=100)),
                ('abbreviations', models.CharField(help_text='Абривиатура названия', max_length=6)),
            ],
        ),
        migrations.CreateModel(
            name='Сountrie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название страны', max_length=100)),
                ('abbreviations', models.CharField(help_text='Абривиатура', max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name='Entrance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numbers', models.CharField(help_text='Номер входа', max_length=10)),
                ('description', models.TextField(help_text='Описание')),
                ('entrance_type', models.OneToOneField(help_text='Тип входа', null=True, on_delete=django.db.models.deletion.SET_NULL, to='realty.entrancetype')),
            ],
        ),
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('index', models.CharField(help_text='Индекс', max_length=10)),
                ('street', models.CharField(help_text='Название дороги (улицы)', max_length=250)),
                ('building_number', models.CharField(help_text='Номер сроения', max_length=10)),
                ('total_space', models.IntegerField(help_text='Этажность')),
                ('total_square', models.FloatField(help_text='Общая площадь')),
                ('description', models.CharField(help_text='Описание')),
                ('building_type', models.OneToOneField(help_text='Тип строения', null=True, on_delete=django.db.models.deletion.SET_NULL, to='realty.buildingtype')),
                ('locality', models.OneToOneField(help_text='Начеленный пункт', null=True, on_delete=django.db.models.deletion.SET_NULL, to='realty.locality')),
                ('region', models.OneToOneField(help_text='Субъект', null=True, on_delete=django.db.models.deletion.SET_NULL, to='realty.region')),
                ('street_type', models.OneToOneField(help_text='Тип дороги', null=True, on_delete=django.db.models.deletion.SET_NULL, to='realty.streettype')),
                ('country', models.OneToOneField(help_text='Страна', null=True, on_delete=django.db.models.deletion.SET_NULL, to='realty.сountrie')),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.AddField(
            model_name='region',
            name='code',
            field=models.ForeignKey(help_text='Код региона', null=True, on_delete=django.db.models.deletion.SET_NULL, to='realty.regioncode'),
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('number', models.IntegerField(help_text='Номер секции')),
                ('description', models.TextField(help_text='Описание секции')),
                ('max_number_of_floors', models.IntegerField(help_text='Этажность')),
                ('building', models.ForeignKey(help_text='Дом', null=True, on_delete=django.db.models.deletion.SET_NULL, to='realty.building')),
                ('entrance_special', models.ForeignKey(help_text='Дополнительный вход', null=True, on_delete=django.db.models.deletion.SET_NULL, to='realty.entrancespecial')),
                ('section_type', models.OneToOneField(help_text='Тип секции', null=True, on_delete=django.db.models.deletion.SET_NULL, to='realty.sectiontype')),
            ],
            options={
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='Floor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('number', models.IntegerField(help_text='Номер этажа')),
                ('total_space', models.FloatField(help_text='Площадь квартир на эьаже')),
                ('total_square', models.FloatField(help_text='Площадь всего этажа')),
                ('common_area', models.FloatField(help_text='Плащадь общих помещений')),
                ('min_numbre_space', models.CharField(help_text='Номер первой квартиры на этаже', max_length=10)),
                ('max_numbre_space', models.CharField(help_text='Номер последний квартиры на этаже', max_length=10)),
                ('description', models.TextField(help_text='Описание этажа')),
                ('elevator', models.ForeignKey(default=None, help_text='Лесница', null=True, on_delete=django.db.models.deletion.SET_NULL, to='realty.elevator')),
                ('floor_special', models.OneToOneField(default=None, help_text='Тип этажа', null=True, on_delete=django.db.models.deletion.SET_NULL, to='realty.floorspecial')),
                ('ladder', models.ForeignKey(default=None, help_text='Лифт', null=True, on_delete=django.db.models.deletion.SET_NULL, to='realty.ladder')),
                ('section', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='realty.section')),
            ],
            options={
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(help_text='Описание комнаты')),
                ('type', models.OneToOneField(help_text='Тип комнаты помещения', null=True, on_delete=django.db.models.deletion.SET_NULL, to='realty.roomtype')),
                ('space', models.ForeignKey(default=None, help_text='Помещение', null=True, on_delete=django.db.models.deletion.SET_NULL, to='realty.space')),
            ],
        ),
        migrations.AddField(
            model_name='space',
            name='space_type',
            field=models.OneToOneField(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='realty.spacetype'),
        ),
    ]
